import {
  DocumentReference,
  Timestamp,
  GeoPoint,
  Bytes,
  doc,
  documentId,
  serverTimestamp,
  increment,
  deleteField,
  arrayUnion,
  arrayRemove,
} from '@react-native-firebase/app/lib/internal/web/firebaseFirestore';

const INT_NAN = 0;
const INT_NEGATIVE_INFINITY = 1;
const INT_POSITIVE_INFINITY = 2;
const INT_NULL = 3;
const INT_DOCUMENTID = 4;
const INT_BOOLEAN_TRUE = 5;
const INT_BOOLEAN_FALSE = 6;
const INT_DOUBLE = 7;
const INT_STRING = 8;
const INT_STRING_EMPTY = 9;
const INT_ARRAY = 10;
const INT_REFERENCE = 11;
const INT_GEOPOINT = 12;
const INT_TIMESTAMP = 13;
const INT_BLOB = 14;
const INT_FIELDVALUE = 15;
const INT_OBJECT = 16;
const INT_INTEGER = 17;
const INT_NEGATIVE_ZERO = 18;
const INT_UNKNOWN = -999;

const TYPE = 'type';
const KEY_PATH = 'path';
const KEY_DATA = 'data';
const KEY_OPTIONS = 'options';

// Converts an object to a writeable object.
export function objectToWriteable(object) {
  const out = {};
  for (const [key, value] of Object.entries(object)) {
    out[key] = buildTypeMap(value);
  }
  return out;
}

// Converts an array of values to a writeable array.
export function arrayToWriteable(array) {
  return array.map(buildTypeMap);
}

// Converts a readable object into a plain js object.
export function readableToObject(firestore, readableMap) {
  const out = {};

  for (const [key, value] of Object.entries(readableMap)) {
    out[key] = parseTypeMap(firestore, value);
  }

  return out;
}

// Converts a readable array into a plain js array.
export function readable